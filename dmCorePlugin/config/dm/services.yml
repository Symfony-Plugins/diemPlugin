parameters:

  mail.class:                 dmMail                # Responsible for building an email from a DmMailTemplate and a data array, then pass it to Swift.

  thread_launcher.class:      dmThreadLauncher      # Responsible for launching background tasks using an internal shell.
  thread_launcher.options:
    cli_file:                 cache/dm/cli.php      # where to write the task bootstrap, relative to the project root directory

  page_synchronizer.class:    dmPageSynchronizer    # Responsible for adding, updating and removing pages when the site content changes.

  seo_synchronizer.class:     dmSeoSynchronizer     # Responsible for updating pages metas when the site content changes.

  cache_cleaner.class:        dmCacheCleaner        # Responsible for clearing the cache automatically when the site content changes.
  cache_cleaner.options:
    applications:             [ admin, front ]      # applications whose cache should be cleared
    environments:             [ prod, dev ]         # environments whose cache should be cleared
    
    # when a instance of this models is created/updated/deleted, the cache is **NOT** cleared.
    safe_models:              [ DmSentMail, DmError, DmRedirect, DmUser, DmPermission, DmGroup, DmGroupPermission, DmUserPermission, DmUserGroup, DmRememberKey, DmMailTemplate ]

  form_field.class:           dmFormField           # Represents a field in a form. Allows chainability in form template helpers.

  markdown.class:             dmMarkdown            # Responsible for parsing markdown text and generating HTML.
  markdown.options:
    auto_header_id:           true                  # whether to generate automatic header ids, based on header text and previous headers structure

  script_name_resolver.class: dmScriptNameResolver  # Responsible for finding applications bootstrap urls. Allows to make a link to the site from the admin, and a link to admin from the site.

  error_watcher.class:        dmErrorWatcher        # Responsible for listening the "application.throw_exception" events and make something with the errors
  error_watcher.options:
    error_description_class:  dmErrorDescription    # class used to describe an error
    mail_superadmin:          false                 # send mail to superadmin ( uses superadmin's email )
    store_in_db:              true                  # store error in database

  media_tag_image.class:      dmMediaTagImage       # Responsible for rendering <img> tags
  media_tag_image.options:    []                    # Configurable from the graphical configuration panel
  
  media_tag_flash.class:      dmMediaTagFlash       # Responsible for rendering flash objects
  media_tag_flash.options:    []
  
  media_tag_video.class:      dmMediaTagVideo       # Responsible for rendering video
  media_tag_video.options:    []
  
  media_tag_audio.class:      dmMediaTagAudio       # Responsible for rendering audio
  media_tag_audio.options:    []

  media_resource.class:       dmMediaResource       # Ressource for a media_tag_*

  table_tag.class:            dmTableTag

  search_engine.class:        dmSearchEngine

  search_index.class:         dmSearchIndex
  
  search_page.class:          dmSearchPageDocument

  theme.class:                dmTheme

  stylesheet_compressor.class: dmStylesheetCompressor
  stylesheet_compressor.options:
    minify:                   true
    gz_compression:           true

  javascript_compressor.class: dmJavascriptCompressor
  javascript_compressor.options:
    minify:                   true
    gz_compression:           true

  auth_layout_helper.class:   dmAuthLayoutHelper

  cache_manager.class:        dmCacheManager
  cache_manager.options:
    meta_cache_class:         dmMetaCache

  filesystem.class:           dmFilesystem
  
  event_log.class:            dmEventLog
  event_log.options:
    name:                     Events
    file:                     'data/dm/log/event.log'
    entry_service_name:       event_log_entry
    rotation:                 true
    max_size_megabytes:       1
    ignore_models:            []
    ignore_internal_actions:  true
  
  event_log_entry.class:      dmEventLogEntry
  
  request_log.class:          dmRequestLog
  request_log.options:
    name:                     Requests
    file:                     'data/dm/log/request.log'
    entry_service_name:       request_log_entry
    rotation:                 true
    max_size_megabytes:       3
  
  request_log_entry.class:    dmRequestLogEntry
    
  browser.class:              dmBrowser
    
  page_tree_watcher.class:    dmPageTreeWatcher
  page_tree_watcher.options:
    use_thread:               auto                        # launch heavy synchronization tasks on another processus ( auto, true, false )
  
  file_backup.class:          dmFileBackup                # Responsible for saving a copy of files edited. All files modified with a Diem code editor are backuped.
  file_backup.options:
    dir:                      'data/dm/backup/filesystem' # where to save files, relative to project root directory.
    
  helper.class:               dmHelper
  helper.options:
    use_beaf:                 false
 
services:

  mail:
    class:                    %mail.class%
    shared:                   false
    arguments:                [ @service_container ]

  thread_launcher:
    class:                    %thread_launcher.class%
    shared:                   false
    arguments:                [ @filesystem, %thread_launcher.options% ]

  page_synchronizer:
    class:                    %page_synchronizer.class%
    shared:                   true
    arguments:                [ @module_manager ]

  seo_synchronizer:
    class:                    %seo_synchronizer.class%
    shared:                   true
    arguments:                [ @module_manager, %user.culture% ]

  cache_cleaner:
    class:                    %cache_cleaner.class%
    shared:                   true
    arguments:                [ @cache_manager, @dispatcher, %cache_cleaner.options% ]

  markdown:
    class:                    %markdown.class%
    shared:                   true
    arguments:                [ @helper, %markdown.options% ]

  script_name_resolver:
    class:                    %script_name_resolver.class%
    shared:                   true
    arguments:                [ @context ]

  error_watcher:
    class:                    %error_watcher.class%
    shared:                   true
    arguments:                [ @dispatcher, @context, %error_watcher.options% ]

  media_tag_image:
    class:                    %media_tag_image.class%
    shared:                   false
    arguments:                [ %media_tag.source%, @context, %media_tag_image.options% ]

  media_tag_flash:
    class:                    %media_tag_flash.class%
    shared:                   false
    arguments:                [ %media_tag.source%, @context, %media_tag_flash.options% ]

  media_tag_video:
    class:                    %media_tag_video.class%
    shared:                   false
    arguments:                [ %media_tag.source%, @context, %media_tag_video.options% ]

  media_tag_audio:
    class:                    %media_tag_audio.class%
    shared:                   false
    arguments:                [ %media_tag.source%, @context, %media_tag_audio.options% ]

  media_resource:
    class:                    %media_resource.class%
    shared:                   false
    arguments:                [ %user.theme%, %user.culture%, %request.context% ]
    
  table_tag:
    class:                    %table_tag.class%
    shared:                   false

  search_engine:
    class:                    %search_engine.class%
    shared:                   true
    arguments:                [ @dispatcher, @logger, @service_container ]

  search_index:
    class:                    %search_index.class%
    shared:                   false
    arguments:                [ @dispatcher, @filesystem, @logger ]

  search_page:
    class:                    %search_page.class%
    shared:                   false
    arguments:                [ @context ]

  asset_config:
    class:                    %asset_config.class%
    shared:                   true
    arguments:                [ @dispatcher, @user ]

  theme:
    class:                    %theme.class%
    shared:                   false
    arguments:                [ @dispatcher, @filesystem, %request.context%, %theme.options% ]
    
  stylesheet_compressor:
    class:                    %stylesheet_compressor.class%
    shared:                   true
    arguments:                [ @dispatcher, @filesystem, %request.context%, %stylesheet_compressor.options% ]

  javascript_compressor:
    class:                    %javascript_compressor.class%
    shared:                   true
    arguments:                [ @dispatcher, @filesystem, %request.context%, %javascript_compressor.options% ]

  layout_helper:
    class:                    %layout_helper.class%
    shared:                   false
    arguments:                [ @dispatcher, @service_container ]

  auth_layout_helper:
    class:                    %auth_layout_helper.class%
    shared:                   false
    arguments:                [ @dispatcher, @service_container ]

  filesystem:
    class:                    %filesystem.class%
    shared:                   true
    arguments:                [ @dispatcher ]
      
  event_log:
    class:                    %event_log.class%
    shared:                   true
    arguments:                [ @dispatcher, @filesystem, @service_container, %event_log.options% ]
      
  event_log_entry:
    class:                    %event_log_entry.class%
    shared:                   false
    arguments:                [ @service_container ]
      
  request_log:
    class:                    %request_log.class%
    shared:                   true
    arguments:                [ @dispatcher, @filesystem, @service_container, %request_log.options% ]
      
  request_log_entry:
    class:                    %request_log_entry.class%
    shared:                   false
    arguments:                [ @service_container ]
      
  browser:
    class:                    %browser.class%
    shared:                   false
    arguments:                [ @dispatcher ]
      
  page_tree_watcher:
    class:                    %page_tree_watcher.class%
    shared:                   true
    arguments:                [ @dispatcher, @service_container, %page_tree_watcher.options% ]
      
  file_backup:
    class:                    %file_backup.class%
    shared:                   true
    arguments:                [ @dispatcher, @filesystem, %file_backup.options% ]
  
  helper:
    class:                    %helper.class%
    shared:                   true
    arguments:                [ @dispatcher, @context, %helper.options% ]
      
  cache_manager:
    class:                    %cache_manager.class%
    shared:                   true
    arguments:                [ @dispatcher, %cache_manager.options% ]