<?php

/**
 * PluginDmSite
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 *
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 5845 2009-06-09 07:36:57Z jwage $
 */
abstract class PluginDmSite extends BaseDmSite
{
  
  public function _get($fieldName, $load = true)
  {
    if($this->hasSetting($fieldName))
    {
      return $this->getSetting($fieldName);
    }
    
    return parent::_get($fieldName, $load);
  }
  
  public function getSetting($name, $culture = null)
  {
    $settings = $this->getSettings($culture);
    
    if (!ctype_lower($name))
    {
      $name = dmString::underscore($name);
    }
    
    if(!array_key_exists($name, $settings))
    {
      throw new dmException('The setting "'.$name.'" does not exist. Available settings : '.implode(', ', array_keys($settings)));
    }
    
    return $settings[$name];
  }
  
  public function getSettings($culture = null)
  {
    if (is_null($culture))
    {
      $culture = self::getDefaultCulture();
    }
    
    $cacheName = 'dm_settings_'.$culture;
    
    if ($this->hasCache($cacheName))
    {
      return $this->getCache($cacheName);
    }
    
    $_settings = dmDb::query('DmSetting s')
    ->leftJoin('s.Translation t ON s.id = t.id AND t.lang = ?', $culture)
    ->select('s.name, t.value')
    ->dmCache()
    ->fetchPDO();
    
    $settings = array();
    foreach($_settings as $_setting)
    {
      $settings[$_setting[0]] = $_setting[1];
    }
    
    return $this->setCache($cacheName, $settings);
  }
  
  public function hasSetting($name, $culture = null)
  {
    if (!ctype_lower($name))
    {
      $name = dmString::underscore($name);
    }
    
    return array_key_exists($name, $this->getSettings($culture));
  }
}