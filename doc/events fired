[dm.data.before]
fired by dmDataService before loading data
params: none

[dm.data.after]
fired by dmDataService after loading data
params: none

[dm.context.loaded]
fired by dmContext when it's ready
params: none

[dm.admin.filter_menu]
fired by dmAdminMenu when it has been loaded. With this event you can modify the menu array.
params: none
value: array the loaded menu

[dm.browser.unknown]
fired by dmBrowser when it is unable to configure from user agent because it is unknown
params: the user agent string

[dm.response.filter_stylesheets]
fired by dmCoreLayoutHelper before rendering stylesheets. With this event you can modify stylesheets just before rendering.
params: none
value: array of stylesheets => options

[dm.response.filter_javascripts]
fired by dmCoreLayoutHelper before rendering javascripts. With this event you can modify javascripts just before rendering.
params: none
value: array of javascripts => options

[dm.theme.created]
fired by dmTheme when it has finished creating its filesystem structure
params: the dmTheme

[dm.context.change_page]
fired by dmFrontContext when current page has changed
params: array('page' => DmPage instance)

[dm.record.modification]
fired by dmDoctrineRecord when it will be saved or deleted
params: array('type' => create|update|delete)

[dm.context.end]
fired by dmContext when application has been succesfully executed

[dm.bread_crumb.filter_links]
fired by dmAdminBreadcrumb before rendering links. With this event you can modify breadCrumb links just before rendering.
params: none
value: array of linkType => options

[dm.bread_crumb.filter_pages]
fired by dmWidgetNavigationBreadcrumb before rendering page links. With this event you can modify breadCrumb pages.
params: none
value: array of module.action => DmPage

[dm.sitemap.generated]
fired by dmSitemap when sitemap has been written to disk
params: array('file' => full server path, 'url' => full web path)

[dm.search.populated]
fired by dmSearchIndex when index has been written to disk
params: array('name' => index name, 'nb_documents' => number of documents generated, 'time' => population time in seconds)

[dm.config.updated]
fired by static dmConfig when a value has been changed
params: array('setting' => DmSetting record, 'culture' => setting culture)

[dm.page_not_found.before]
fired by dmPageNotFoundHandler with a notifyUntil before searching for a possible redirection.
Assign an url to the event's return value to redirect the request.
params: array('slug' => the not found slug)

[dm.page_not_found.after]
fired by dmPageNotFoundHandler with a notifyUntil after searching for a possible redirection, and found nothing.
Assign an url to the event's return value to redirect the request.
params: array('slug' => the not found slug)

[dm.refresh]
fired by dmCoreActions when user refreshed the site.
params: array()

[dm.cache.clear]
fired by dmCacheCleaner when all cache has been cleared
params: array('success' => cache cleared successfully ( or not )

[dm.cache.clear_template]
fired by dmCacheCleaner when template cache has been cleared
params: array()

[admin.edit_object]
fired by an admin module edit action when a record will be edited or updated